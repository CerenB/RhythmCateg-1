function createDataDictionary(expParameters, logFile)

    opts.Indent = '    ';

    fileName = strrep(expParameters.fileName.events, '.tsv', '.json');

    fileName = fullfile( ...
        expParameters.subjectOutputDir, ...
        expParameters.modality, ...
        fileName);

    jsonContent = struct( ...
        'onset', struct( ...
        'Description', 'time elapsed since experiment start', ...
        'Unit', 's'), ...
        'trial_type', struct( ...
        'Description', 'types of trial', ...
        'Levels', ''), ...
        'duration', struct( ...
        'Description', 'duration of the event or the block', ...
        'Unit', 's') ...
        );

    % transfer content of extra fields to json content
    namesExtraColumns = returnNamesExtraColumns(logFile);

    for iExtraColumn = 1:numel(namesExtraColumns)

        nbCol = returnNbColumns(logFile, namesExtraColumns{iExtraColumn});

        for iCol = 1:nbCol

            headerName = returnHeaderName(namesExtraColumns{iExtraColumn}, nbCol, iCol);

            jsonContent.(headerName) = ...
                logFile(1).extraColumns.(namesExtraColumns{iExtraColumn}).bids;

        end

    end

    bids.util.jsonencode(fileName, jsonContent, opts);

end
